mammalHR<-read.csv("dados/mammalHR.csv",row.names=1)
### visualizando dados
mammalHR
par(mar=c(5.1,5.1,1.1,1.1))
## create scatterplot
plot(homeRange~bodyMass,data=mammalHR,
xlab="body mass (kg)",
ylab=expression(paste("home range (km"^"2",")")),
pch=21,bg="gray",cex=1.2,log="xy",las=1,cex.axis=0.7,
cex.lab=0.9,bty="n")
### visualizando a distribuição dos dados
plot(homeRange~bodyMass,data=mammalHR,
xlab="body mass (kg)",
ylab=expression(paste("home range (km"^"2",")")),
pch=21,bg="gray",cex=1.2,log="xy",las=1,cex.axis=0.7,
cex.lab=0.9,bty="n")
### ajustando regressão linear
fit.ols<-lm(log(homeRange)~log(bodyMass),data=mammalHR)
### carregando dados fenotípicos
mammalHR<-read.csv("dados/mammalHR.csv",row.names=1)
### visualizando a distribuição dos dados
plot(homeRange~bodyMass,data=mammalHR,
xlab="body mass (kg)",
ylab=expression(paste("home range (km"^"2",")")),
pch=21,bg="gray",cex=1.2,log="xy",las=1,cex.axis=0.7,
cex.lab=0.9,bty="n")
### ajustando regressão linear
fit.ols<-lm(log(homeRange)~log(bodyMass),data=mammalHR)
fit.ols
summary(fit.ols)
plot(homeRange~bodyMass,data=mammalHR,
xlab="body mass (kg)",
ylab=expression(paste("home range (km"^"2",")")),
pch=21,bg="gray",cex=1.2,log="xy",las=1,
cex.axis=0.7,cex.lab=0.9,bty="n")
lines(mammalHR$bodyMass,exp(predict(fit.ols)),lwd=2,
col="darkgray")
### gerando vetores distintos para fenótipo
homeRange<-setNames(mammalHR[,"homeRange"], rownames(mammalHR))
bodyMass<-setNames(mammalHR[,"bodyMass"], rownames(mammalHR))
### calculando os contrastes para cada fenótipo
pic.homerange<-pic(log(homeRange),mammal.tree)
pic.bodymass<-pic(log(bodyMass),mammal.tree)
### bibliotecas
if (!require("phytools")) install.packages("phytools"); library("phytools")
if (!require("geiger")) install.packages("geiger"); library("geiger")
### visualizando a árvores filogenética
plotTree(mammal.tree,ftype="i",fsize=0.7,lwd=1)
### carregando árvore filogenética
mammal.tree<-read.tree("dados/mammalHR.phy")
### visualizando a árvores filogenética
plotTree(mammal.tree,ftype="i",fsize=0.7,lwd=1)
nodelabels(bg="white",cex=0.5,frame="circle")
mammal.tree
### calculando os contrastes para cada fenótipo
pic.homerange<-pic(log(homeRange),mammal.tree)
pic.bodymass<-pic(log(bodyMass),mammal.tree)
### verificar valores dos contrastes
pic.homerange
### verificar valores dos contrastes
pic.bodymass
bodyMass
mammal.tree
mammal.tree$edge.length
mammal.tree$edge
mammal.tree$edge.length
(57 - 74)/ sqrt(2)
### verificar valores dos contrastes
pic.bodymass
(57 - 74)/ sqrt(2)
(57 + 74)/ 2
1*1 / 2
(57*1) + (74*1) / 2
(57*1) - (74*1) / 2
(57*1) - (74*1) / 2
###
fit.pic<-lm(pic.homerange~pic.bodymass+0)
fit.pic
sumamry(fit.pic)
###
fit.pic<-lm(pic.homerange~pic.bodymass+0)
summary(fit.pic)
log(bodyMass)
4.0430513 - 4.3040651
4.0430513 - 4.3040651 /2
(4.0430513 - 4.3040651) /2
pic.bodymass
(4.0430513 + 4.3040651) /2
log(bodyMass)
pic.bodymass
log(bodyMass)
plot(pic.homerange~pic.bodymass,
xlab="PICs for log(body mass)",
ylab="PICs for log(range size)",
pch=21,bg="gray",cex=1.2,las=1,
cex.axis=0.7,cex.lab=0.9,bty="n")
## add gridlines to the plot
abline(h=0,lty="dotted")
abline(v=0,lty="dotted")
## reset graphing limits of the plot to the
## x/y range of our PICs
clip(min(pic.bodymass),max(pic.bodymass),
min(pic.homerange),max(pic.homerange))
## graph our fitted line
abline(fit.pic,lwd=2,col="darkgray")
par(mar=c(5.1,5.1,1.1,1.1))
plot(pic.homerange~pic.bodymass,
xlab="PICs for log(body mass)",
ylab="PICs for log(range size)",
pch=21,bg="gray",cex=1.2,las=1,
cex.axis=0.7,cex.lab=0.9,bty="n")
## add gridlines to the plot
abline(h=0,lty="dotted")
abline(v=0,lty="dotted")
## reset graphing limits of the plot to the
## x/y range of our PICs
clip(min(pic.bodymass),max(pic.bodymass),
min(pic.homerange),max(pic.homerange))
## graph our fitted line
abline(fit.pic,lwd=2,col="darkgray")
plot(homeRange~bodyMass,data=mammalHR,
xlab="body mass (kg)",
ylab=expression(paste("home range (km"^"2",")")),
pch=21,bg="gray",cex=1.2,log="xy",las=1,
cex.axis=0.7,cex.lab=0.9,bty="n")
lines(mammalHR$bodyMass,exp(predict(fit.ols)),lwd=2,
col="darkgray")
plot(log(homeRange) ~ log(bodyMass),data=mammalHR,
xlab="body mass (kg)",
ylab=expression(paste("home range (km"^"2",")")),
pch=21,bg="gray",cex=1.2,log="xy",las=1,
cex.axis=0.7,cex.lab=0.9,bty="n")
lines(mammalHR$bodyMass,exp(predict(fit.ols)),lwd=2,
col="darkgray")
abline(fit.ols)
plot(log(homeRange) ~ log(bodyMass),data=mammalHR,
xlab="log(body mass)",
ylab="log(home range)")),
plot(log(homeRange) ~ log(bodyMass),data=mammalHR,
xlab="log(body mass)",
ylab="log(home range)",
pch=21,bg="gray",cex=1.2,log="xy",las=1,
cex.axis=0.7,cex.lab=0.9,bty="n")
plot(log(homeRange) ~ log(bodyMass),data=mammalHR,
xlab="log(body mass)",
ylab="log(home range)",
pch=21,bg="gray",cex=1.2,log="xy",las=1,
cex.axis=0.7,cex.lab=0.9,bty="n")
abline(fit.ols)
### visualizando a distribuição dos dados
plot(homeRange~bodyMass,data=mammalHR,
xlab="body mass (kg)",
ylab=expression(paste("home range (km"^"2",")")),
pch=21,bg="gray",cex=1.2,log="xy",las=1,cex.axis=0.7,
cex.lab=0.9,bty="n")
### ajustando regressão linear
fit.ols<-lm(log(homeRange)~log(bodyMass),data=mammalHR)
summary(fit.ols)
plot(log(homeRange) ~ log(bodyMass),data=mammalHR,
xlab="log(body mass)",
ylab="log(home range)",
pch=21,bg="gray",cex=1.2,log="xy",las=1,
cex.axis=0.7,cex.lab=0.9,bty="n")
abline(fit.ols)
plot(pic.homerange~pic.bodymass,
xlab="PICs for log(body mass)",
ylab="PICs for log(range size)",
pch=21,bg="gray",cex=1.2,las=1,
cex.axis=0.7,cex.lab=0.9,bty="n")
## reset graphing limits of the plot to the
## x/y range of our PICs
clip(min(pic.bodymass),max(pic.bodymass),
min(pic.homerange),max(pic.homerange))
## graph our fitted line
abline(fit.pic,lwd=2,col="darkgray")
### visualizando modelo ordinário
plot(log(homeRange) ~ log(bodyMass),data=mammalHR,
xlab="log(body mass)",
ylab="log(home range)",
pch=21,bg="gray",cex=1.2,log="xy",las=1,
cex.axis=0.7,cex.lab=0.9,bty="n")
abline(fit.ols, lwd=2,col="darkgray")
plot(pic.homerange~pic.bodymass,
xlab="PICs for log(body mass)",
ylab="PICs for log(range size)",
pch=21,bg="gray",cex=1.2,las=1,
cex.axis=0.7,cex.lab=0.9,bty="n")
## reset graphing limits of the plot to the
## x/y range of our PICs
clip(min(pic.bodymass),max(pic.bodymass),
min(pic.homerange),max(pic.homerange))
## graph our fitted line
abline(fit.pic,lwd=2,col="darkgray")
fit.ols
fit.pic
### visualizando modelo ordinário
plot(log(homeRange) ~ log(bodyMass),data=mammalHR,
xlab="log(body mass)",
ylab="log(home range)",
pch=21,bg="gray",cex=1.2,log="xy",las=1,
cex.axis=0.7,cex.lab=0.9,bty="n")
abline(fit.ols, lwd=2,col="darkgray")
plot(pic.homerange~pic.bodymass,
xlab="PICs for log(body mass)",
ylab="PICs for log(range size)",
pch=21,bg="gray",cex=1.2,las=1,
cex.axis=0.7,cex.lab=0.9,bty="n")
plot(pic.homerange~pic.bodymass,
xlab="PICs for log(body mass)",
ylab="PICs for log(range size)",
pch=21,bg="gray",cex=1.2,las=1,
cex.axis=0.7,cex.lab=0.9,bty="n")
## graph our fitted line
abline(fit.pic,lwd=2,col="darkgray")
fit.pic
summary(fit.pic)
summary(fit.ols)
if (!require("nlme")) install.packages("nlme"); library("nlme")
### visualizando a distribuição dos dados
plot(homeRange~bodyMass,data=mammalHR,
xlab="body mass (kg)",
ylab=expression(paste("home range (km"^"2",")")),
pch=21,bg="gray",cex=1.2,log="xy",las=1,cex.axis=0.7,
cex.lab=0.9,bty="n")
### ajustando regressão linear ordinária
fit.ols<-lm(log(homeRange)~log(bodyMass),data=mammalHR)
summary(fit.ols)
resid(fit.ols)
shapiro.wilk(resid(fit.ols))
shapiro.test(resid(fit.ols))
### visualizando modelo ordinário
plot(log(homeRange) ~ log(bodyMass),data=mammalHR,
xlab="log(body mass)",
ylab="log(home range)",
pch=21,bg="gray",cex=1.2,log="xy",las=1,
cex.axis=0.7,cex.lab=0.9,bty="n")
abline(fit.ols, lwd=2,col="darkgray")
### visualizando modelo ordinário
plot(log(homeRange) ~ log(bodyMass),data=mammalHR,
xlab="log(body mass)",
ylab="log(home range)",
pch=21,bg="gray",cex=1.2,las=1,
cex.axis=0.7,cex.lab=0.9,bty="n")
abline(fit.ols, lwd=2,col="darkgray")
resid(fit.pic)
shapiro.test(resid(fit.pic))
### verificando sustentação
summary(fit.ols)
### verificando sustentação
summary(fit.pic)
plot(pic.homerange~pic.bodymass,
xlab="PICs for log(body mass)",
ylab="PICs for log(range size)",
pch=21,bg="gray",cex=1.2,las=1,
cex.axis=0.7,cex.lab=0.9,bty="n")
## graph our fitted line
abline(fit.pic,lwd=2,col="darkgray")
fitContinuous(log(mammalHR$bodyMass))
fitContinuous(dat = log(mammalHR$bodyMass))
fitContinuous(dat = log(mammalHR$bodyMass), phy = mammal.tree)
ln_bodyMass =log(mammalHR$bodyMass)
ln_bodyMass =log(mammalHR$bodyMass)
names(mammalHR$bodyMass) = names(mammalHR$bodyMass)
### carregando dados fenotípicos
mammalHR<-read.csv("dados/mammalHR.csv",row.names=1)
### organizando a variável resposta em um vetor nomeado
ln_bodyMass =log(mammalHR$bodyMass)
names(ln_bodyMass) = names(mammalHR$bodyMass)
ln_bodyMass
### ajustando modelos evolutivos
fitContinuous(dat = log(mammalHR$bodyMass), phy = mammal.tree)
### ajustando modelos evolutivos
fitContinuous(dat = ln_bodyMass, phy = mammal.tree)
### ajustando modelos evolutivos
fitContinuous(data = ln_bodyMass, phy = mammal.tree)
ln_bodyMass
rownames(mammalHR$bodyMass)
mammalHR
rownames(mammalHR$bodyMass)
row.names(mammalHR$bodyMass)
names(mammalHR$bodyMass)
### ajustando modelos evolutivos
fitContinuous(phy = mammal.tree, dat = ln_bodyMass,  model = "BM")
mammalHR
### organizando a variável resposta em um vetor nomeado
ln_bodyMass =log(mammalHR$bodyMass)
names(ln_bodyMass) = rownames(mammalHR)
ln_bodyMass
### ajustando modelos evolutivos
fitContinuous(phy = mammal.tree,
dat = ln_bodyMass,
model = "BM")
### ajustando modelos evolutivos
fitBM = fitContinuous(phy = mammal.tree,
dat = ln_bodyMass,
model = "BM")
fitOU = fitContinuous(phy = mammal.tree,
dat = ln_bodyMass,
model = "OU")
### comparando
AIC(fitBM)
### comparando
setNames(c(AIC(fitBM) , AIC(fitOU)), c("BM" "OU"))
### comparando
setNames(c(AIC(fitBM) , AIC(fitOU)), c("BM", "OU"))
### comparando
aic = setNames(c(AIC(fitBM) , AIC(fitOU)), c("BM", "OU"))
aic.w(aic)
### organizando a variável resposta em um vetor nomeado
ln_range =log(mammalHR$homeRange)
### organizando a variável resposta em um vetor nomeado
ln_range =log(mammalHR$homeRange)
names(ln_range) = rownames(mammalHR)
### ajustando modelos evolutivos
fitBM = fitContinuous(phy = mammal.tree,
dat = ln_bodyMass,
model = "BM")
fitOU = fitContinuous(phy = mammal.tree,
dat = ln_bodyMass,
model = "OU")
### comparando modelos evolutivos
aic = setNames(c(AIC(fitBM) , AIC(fitOU)), c("BM", "OU"))
aic.w(aic)
### ajustando modelos evolutivos
fitBM = fitContinuous(phy = mammal.tree,
dat = ln_range,
model = "BM")
fitOU = fitContinuous(phy = mammal.tree,
dat = ln_range,
model = "OU")
### comparando modelos evolutivos
aic = setNames(c(AIC(fitBM) , AIC(fitOU)), c("BM", "OU"))
aic.w(aic)
aic["BM"]
aicw = aic.w(aic)
aicw
max(aicw)
aicw == max(aicw)
which(aicw == max(aicw))
names(which(aicw == max(aicw)))
### vetor com o nome das espécies
spp = rownames(mammalHR)
corBrownian(phy=mammal.tree,form=~spp)
cor_str = corBrownian(phy=mammal.tree,form=~spp)
cor_str
fitBM$opt
fitBM$opt$sigsq
value = fitBM$opt$sigsq
sigma_sq = fitBM$opt$sigsq
cor_str = corBrownian(value = sigma_sq, phy=mammal.tree, form=~spp)
cor_str
fitOU$opt$alpha
alpha = fitOU$opt$alpha
cor_str = corMartins(value = alpha, phy=mammal.tree, form=~spp)
cor_str
alpha = fitOU$opt$alpha
cor_str = corMartins(value = alpha, phy=mammal.tree, form=~spp)
fit.pgls<-gls(log(homeRange)~log(bodyMass),
data = mammalHR,
correlation = cor_str)
cor_str
log(homeRange)
log(bodyMass)
fit.pgls<-gls(log(homeRange)~log(bodyMass),
data = mammalHR,
correlation = cor_str)
sigma_sq = fitBM$opt$sigsq
cor_str = corBrownian(value = sigma_sq, phy=mammal.tree, form=~spp)
fit.pgls<-gls(log(homeRange)~log(bodyMass),
data = mammalHR,
correlation = cor_str)
fit.pgls
shapiro.test(resid(fit.pgls))
### verificando sustentação do modelo
summary(fit.pgls)
### verificando sustentação
summary(fit.pic)
cor_str = corMartins(value = alpha, phy=mammal.tree, form=~spp, fixed = T)
cor_str
alpha
### ajustando PGLS aos dados
fit.pgls<-gls(log(homeRange)~log(bodyMass),
data = mammalHR,
correlation = cor_str)
### verificando normalidade dos resíduos
shapiro.test(resid(fit.pgls))
### verificando sustentação do modelo
summary(fit.pgls)
### visualizando modelo ordinário
plot(log(homeRange) ~ log(bodyMass),data=mammalHR,
xlab="log(body mass)",
ylab="log(home range)",
pch=21,bg="gray",cex=1.2,las=1,
cex.axis=0.7,cex.lab=0.9,bty="n")
abline(fit.pgls, lwd=2,col="darkgray")
